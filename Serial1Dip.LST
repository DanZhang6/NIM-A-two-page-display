C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE SERIAL1DIP
OBJECT MODULE PLACED IN Serial1Dip.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Serial1Dip.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************
   2          *描述：
   3          *     备用显示处理
   4          *功能：
   5          *     备用机显示NIM-A和NIM-B传输数据，如果需要报警，在屏幕上显示指示灯
   6          
   7          *******************************************************************/
   8          #include "STC12C5A60S2.h"
   9          #include "intrins.h"
  10          #include "config.h" 
  11          #include "absacc.h"
  12          #include "stdio.h"
  13          #include "math.h"
  14          
  15          
  16          /**变量初始化*/
  17          //uchar backup_data[20];            //存放备用显示的数据 
  18          //uchar data_A[8];
  19          //uchar data_B[12];
  20          //bit Flag_data_change;           //备用此案时数据更新标志
  21          //uchar alarm_data = 0x00;
  22          //bit Flag_serial1_led;                        //备用机的闪烁开启定时标志
  23          
  24          //void Write_Data (uchar Pchar);
  25          //uchar Backup_Covn(uchar temp_data,uchar code_data);
  26          //void BackUp_displayA();
  27          //void SegLED_Clear();
  28          /*************************************
  29          *         备用显示屏显示NIM_A    
  30          *************************************/
  31          /*void BackUp_displayA()//4.20晚修改
  32          {
  33              uchar idata z,x;
  34                  uchar idata uGy,mGy,Gy;
  35              
  36                  for(z=0;z<2;z++)
  37                    {   
  38                                  if(z == 0)      //显示第三个探头
  39                                  {
  40                                           x = 2;
  41                                  }
  42                                  if(z == 1)      //显示第八个探头
  43                                  {
  44                                           x = 7;
  45                                  }*/
  46                                  /******报警的设置******/
  47          /*                      if(x == 2)
  48                                  {
  49                                          if(send_buf[8*x+7] == 1)
  50                                          {
  51                                                  alarm_data = 0x42;
  52                                                  backup_data[6*z] = alarm_data ;
  53                                          }
  54                                          else if(send_buf[8*x+7] == 0)
  55                                          {
C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 2   

  56                                                  alarm_data = 0x02;
  57                                                  backup_data[6*z] = alarm_data ;
  58                                          }
  59                                  }
  60                                  if(x == 7)
  61                                  {
  62                                          if(send_buf[8*x+7] == 1)
  63                                          {
  64                                                  alarm_data |= 0x20;
  65                                                  backup_data[6*z] = alarm_data ;
  66                                          }
  67                                          else if(send_buf[8*x+7] == 0)
  68                                          {
  69                                                  alarm_data |= 0x00;
  70                                                  backup_data[6*z] = alarm_data ;
  71                                          }
  72                                  }*/
  73                                  /*****单位的选择*****/          
  74          /*                      if(send_buf[8*x+6] == 1)
  75                                  {
  76                                          uGy = 1;
  77                                          backup_data[6*z+1] = 0x30;
  78                                  }
  79                                  if(send_buf[8*x+6] == 2)
  80                                  {
  81                                          mGy = 1;
  82                          backup_data[6*z+1] = 0x28;
  83                                  }
  84                                  if(send_buf[8*x+6] == 3)
  85                                  {
  86                                          Gy = 1;
  87                                          backup_data[6*z+1] = 0x24;
  88                                  }*/
  89                                  /*****数据的显示******/                 
  90          /*                      if(send_buf[8*x] != 0)   //如果千位不为零
  91                                  {
  92                                          data_A[4*z+3] = Backup_Covn(send_buf[8*x],data_A[4*z+3]);
  93                                      data_A[4*z+2] = Backup_Covn(send_buf[8*x+1],data_A[4*z+2]);
  94                                          data_A[4*z+1] = Backup_Covn(send_buf[8*x+2],data_A[4*z+1]);
  95                                          data_A[4*z] = Backup_Covn(send_buf[8*x+3],data_A[4*z]);
  96                                  }
  97                                  else if(send_buf[8*x] == 0)   //如果千位为零
  98                                  {
  99                                          data_A[4*z+3] = 0x03;
 100                                          if(send_buf[8*x+1] != 0)   //如果百位不为零
 101                                          {
 102                                              data_A[4*z+2] = Backup_Covn(send_buf[8*x+1],data_A[4*z+2]);
 103                                          }
 104                                          else if(send_buf[8*x+1] == 0)   //如果百位为零
 105                                          {
 106                                              data_A[4*z+2] = 0x03;       
 107                                          }
 108                                          data_A[4*z+1] = Backup_Covn(send_buf[8*x+2],data_A[4*z+1]);  //不管十位是否为零，都要显示
 109                                      data_A[4*z] = Backup_Covn(send_buf[8*x+3],data_A[4*z]);
 110                                  }
 111                                  data_A[4*z+3] = data_A[4*z+3] << 4;
 112                                  backup_data[4*z+3] = data_A[4*z+3] | data_A[4*z+2];
 113                                  data_A[4*z+1] = data_A[4*z+1] << 4;
 114                                  backup_data[4*z+2] = data_A[4*z+1] | data_A[4*z];
 115                          }
 116          }*/
 117          /**********************************
C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 3   

 118          *         备用显示关闭处理
 119          ***********************************/
 120          /*void SegLED_Clear()
 121          {
 122                          Write_Data(0x00);
 123                          Write_Data(0x00);
 124                          Write_Data(0x33);
 125                          Write_Data(0x33);
 126                          Write_Data(0x33);
 127          }*/
 128          
 129          /***********************************
 130          *          备用显示数据译码
 131          ************************************/
 132          /*uchar Backup_Covn(uchar temp_data,uchar code_data)
 133          {
 134              uchar cov_data[10] = {0x00,0x08,0x04,0x0c,0x02,0x0a,0x06,0x0e,0x01,0x09};
 135                  uchar i;
 136                  for(i=0;i<10;i++)
 137                  {
 138                          if(temp_data == i)
 139                          {
 140                                  code_data = cov_data[i];
 141                                  return code_data;
 142                          }
 143                   }
 144                   
 145          }*/
 146          /*************************************
 147          *         备用显示屏显示NIM_B    
 148          *************************************/
 149          /*void BackUp_displayB()//4.20晚修改
 150          {
 151              uchar idata z,x;
 152                  uchar idata mBq,kBq,Bq;
 153                  for(z=0;z<3;z++)
 154                    {    
 155                                  if(z == 0)      //显示第一个探头
 156                                  {
 157                                   x = 0;
 158                                  }
 159                                  if(z == 1)      //显示第二个探头
 160                                  {
 161                                   x = 1;
 162                                  }
 163                      if(z == 2)      //显示第五个探头
 164                      {
 165                                   x = 4;
 166                      }*/
 167                                  /******报警的设置******/
 168          /*            if(x == 0)
 169                                  {
 170                                          if(receive_buf[8*x+7] == 1)
 171                                          {
 172                                                  alarm_data |= 0x10;
 173                                                  backup_data[6*z+12] = alarm_data ;
 174                                          }
 175                                          else if(receive_buf[8*x+7] == 0)
 176                                          {
 177                                                  alarm_data |= 0x00;
 178                                                  backup_data[6*z+12] = alarm_data ;
 179                                          }
C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 4   

 180                                  }
 181                                  if(x == 1)
 182                                  {
 183                                          if(receive_buf[8*x+7] == 1)
 184                                          {
 185                                                  alarm_data |= 0x08;
 186                                                  backup_data[6*z+12] = alarm_data ;
 187                                          }
 188                                          else if(receive_buf[8*x+7] == 0)
 189                                          {
 190                                                  alarm_data |= 0x00;
 191                                                  backup_data[6*z+12] = alarm_data ;
 192                                          }
 193                                  }
 194                                  if(x == 4)
 195                                  {
 196                                          if(receive_buf[8*x+7] == 1)
 197                                          {
 198                                                  alarm_data |= 0x04;
 199                                                  backup_data[6*z+12] = alarm_data ;
 200                                          }
 201                                          else if(receive_buf[8*x+7] == 0)
 202                                          {
 203                                                  alarm_data |= 0x00;
 204                                                  backup_data[6*z+12] = alarm_data ;
 205                                          }
 206                                  }*/
 207                                  /*****单位的选择*****/          
 208          /*                      if(receive_buf[8*x+6] == 1)
 209                                  {
 210                                          Bq = 1;
 211                                          backup_data[6*z+13] = 0x20;
 212                                          backup_data[6*z+12] |= 0x80;
 213                                          
 214                                  }
 215                                  if(receive_buf[8*x+6] == 2)
 216                                  {
 217                                          kBq = 1;
 218                          backup_data[6*z+13] = 0x21;
 219                                  }
 220                                  if(receive_buf[8*x+6] == 3)
 221                                  {
 222                                          mBq = 1;
 223                                          backup_data[6*z+13] = 0x22;
 224                                  }*/
 225                                  /*****数据的显示******/                 
 226          /*                      if(receive_buf[8*x] != 0)   //如果千位不为零
 227                                  {
 228                                          data_B[4*z+3] = Backup_Covn(receive_buf[8*x],data_B[4*z+3]);
 229                                      data_B[4*z+2] = Backup_Covn(receive_buf[8*x+1],data_B[4*z+2]);
 230                                          data_B[4*z+1] = Backup_Covn(receive_buf[8*x+2],data_B[4*z+1]);
 231                                          data_B[4*z] = Backup_Covn(receive_buf[8*x+3],data_B[4*z]);
 232                                  }
 233                                  else if(receive_buf[8*x] == 0)   //如果千位为零
 234                                  {
 235                                          data_B[4*z+3] = 0x03;
 236                                          if(receive_buf[8*x+1] != 0)   //如果百位不为零
 237                                          {
 238                                              data_B[4*z+2] = Backup_Covn(receive_buf[8*x+1],data_B[4*z+2]);
 239                                          }
 240                                          else if(receive_buf[8*x+1] == 0)   //如果百位为零
 241                                          {
C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 5   

 242                                              data_B[4*z+2] = 0x03;       
 243                                          }
 244                                          data_B[4*z+1] = Backup_Covn(receive_buf[8*x+2],data_B[4*z+1]);  //不管十位是否为零，都要显示
 245                                      data_B[4*z] = Backup_Covn(receive_buf[8*x+3],data_B[4*z]);
 246                                  }
 247                                  data_B[4*z+3] = data_B[4*z+3] << 4;
 248                                  backup_data[4*z+11] = data_B[4*z+3] | data_B[4*z+2];
 249                                  data_B[4*z+1] = data_B[4*z+1] << 4;
 250                                  backup_data[4*z+10] = data_B[4*z+1] | data_B[4*z];
 251                          }
 252          }*/
 253          
 254          /**************************************
 255          *        备用显示屏控制
 256          **************************************/
 257          /*void bakeup_conv_data()
 258          {
 259                  alarm_data = 0x00;
 260                  BackUp_displayA();
 261                  BackUp_displayB();
 262          }*/
 263          
 264          /*********************************
 265          *        串并转换数据写入
 266          ***********************************/
 267          /*void Write_Data (uchar Pchar) //UART1发送数据
 268          {
 269                          SBUF  = Pchar;
 270                          while (!TI);            // 等待至TI1为1
 271                          TI      = 0;                    // 将TI1清零
 272          }*/
 273          
 274          
 275          /**********************************
 276          *        显示传递到备用屏的数据
 277          ***********************************/
 278          /*void display_covn_data()
 279          {
 280                  uchar i,t;      
 281                  for(i=1;i<6;i++)
 282                  {       
 283          //              BackUp_Display();
 284                          if((Flag_Commond == 0) && (Flag_data_change == 1))
 285                          {
 286                              t = Backup_Covn(i,t);
 287                              SegLED_Clear();
 288                                  Write_Data(backup_data[4*i-4]);
 289                                  Write_Data(backup_data[4*i-3]);
 290                                  Write_Data(backup_data[4*i-2]);
 291                                  Write_Data(backup_data[4*i-1]);
 292                                  Write_Data(t);
 293                          }
 294                          if((Flag_Commond == 1) || (Flag_data_change == 0))
 295                          {
 296                                  SegLED_Clear();
 297                                  return;
 298                          }
 299                          if(Flag_Warn_Flash)                  //主机LED指示灯闪烁间隔定时
 300                          {
 301                                  Flag_Warn_Flash = 0;
 302                      Led_Flash();
 303                          }
C51 COMPILER V7.08   SERIAL1DIP                                                            04/11/2016 13:25:22 PAGE 6   

 304                          if((Flag_Warn_Led==1)&&(PCOLSIG==0))  //屏幕上红灯闪烁间隔定时         
 305                          {
 306                                  Flag_Warn_Led = 0;
 307                                  RedLed_Flash();
 308                           }
 309                          shortdelay(2000);
 310                  }
 311          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
