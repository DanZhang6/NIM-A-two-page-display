C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************************
             -************
   2          * ÒÇÆ÷Ãû³Æ£º
   3                     r·øÉäÒÇ
   4          * ¹¦ÄÜ£º
   5                  1.   Ê±¼ä¼ü£ºÉèÖÃ²âÁ¿Ê±¼ä£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   6                  2.   Ì½Í·¼ü£ºÉèÖÃÌ½Í·¸öÊı£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   7                          3.   ²âÁ¿¼ü£º¼ÆÊıÌ½Í·¼ÆÊı½á¹û£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾Ã¿¸öÌ½Í·¼ÆÊıÂÊ£»
   8                          4.   ²ÎÊı¼ü£ºÉèÖÃ²ÎÊı´óĞ¡£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   9                          5.   ²ÎÊıÓÒÒÆ¼ü£ºÉèÖÃ²ÎÊıµÄÎ»£¬Óë²ÎÊı¼ü½áºÏ£¬À´ÉèÖÃÃ¿Î»²ÎÊıµÄ´óĞ¡£¬¿ÉÍ¨¹ıÒº¾§ÆÁ¹â±êÏÔÊ¾£»
  10                  6.   ÖØÉè¼ü£º ½«ÉèÖÃ·µ»Øµ½³õÊ¼»¯×´Ì¬£»
  11             
  12          * °´¼ü£º   Ì½Í·ÉèÖÃ¼ü£¬²âÁ¿¼ü£¬¸´Î»¼ü£¬Ê±¼äÉèÖÃ¼ü£¬²ÎÊıÉèÖÃ¼ü£¬ÓÒÒÆ¼ü£¬×óÒÆ¼ü£»
  13          * ½Ó¿Ú£º
  14                     ÊäÈë£º1.     Áù¸ö°´¼üÍ¨¹ı74HC244½Óµ¥Æ¬»úµÄÊı¾İ×ÜÏß£»
  15                                   2. Ì½Í·1-15½Óµ½8053¼ÆÊıÆ÷£¬ÎåÆ¬8253Êı¾İ¶Ë½Óµ¥Æ¬»úµÄÊı¾İ×ÜÏß£»
  16          
  17                             Êä³ö£º 8253ÃÅĞÅºÅ--P1.1,·äÃù--P1.0£¬Ö÷»ú/´Ó»úÑ¡Ôñ--P1.6£¬¸´Î»--P4.7£¬·äÃùÆ÷¿ª¹Ø--P1.7,´Ó»úÏÔÊ¾¿ª¹Ø--P
             -3.3;
  18                                    Ö÷»úÇëÇóĞÅºÅNote1--P4.4,Ö÷»úÓ¦´ğĞÅºÅACKO--P3.5,´Ó»úÇëÇóĞÅºÅNote0--P3.4,´Ó»úÓ¦´ğĞÅºÅACK1--P4.6£
             -»
  19                                            Êı¾İ×ÜÏß--P0¿Ú£¬µØÖ·×ÜÏß--P2¿Ú£»
  20                                                                                             
  21          **********************************************************************************************************
             -***********/
  22          /********************************
  23          ´ıĞŞ¶©µÄ£º²ÎÊı±¨¾¯ãĞÖµ£¬²ÎÊı¶ÎÉèÖÃµÄãĞÖµ
  24          *********************************/
  25          
  26          #include "STC12C5A60S2.h"
  27          #include "intrins.h"
  28          #include "config.h" 
  29          #include "absacc.h"
  30          
  31          
  32          bdata bit Flag_KeyInput;                         //Ì½Í·°´¼ü±êÖ¾£¬Ä¬ÈÏ0
  33          bdata bit Flag_KeyTime;                          //²âÁ¿Ê±¼ä±êÖ¾£¬0
  34          bdata bit Flag_KeyPara;                          //ÊäÈë²ÎÊı±êÖ¾£¬0
  35          bdata bit Flag_KeyRight;                         //ÓÒÒÆ±êÖ¾£¬Ä¬ÈÏ0
  36          bdata bit Flag_KeyLeft;                          //×óÒÆ±êÖ¾£¬0                                            
             -            
  37          bdata bit Flag_KeyReset;                         //ÖØĞÂÏÔÊ¾±êÖ¾£¬0
  38          bdata bit Flag_KeyOK;                            //²âÁ¿±êÖ¾£¬Ä¬ÈÏ0
  39          bdata bit Flag_Warn;                             //±¨¾¯±êÖ¾
  40          bdata bit Flag_Mast;                             //Ö÷´Ó»ú±êÖ¾
  41          bdata bit Flag_RefrInput;                        //Ì½Í·¸öÊı°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  42          bdata bit Flag_RefrTime;                         //²âÁ¿Ê±¼ä°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  43          bdata bit Flag_RefrPara;                         //ÊäÈë²ÎÊı°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  44          bdata bit Flag_RefrRight;                        //ÓÒÒÆ°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  45          bdata bit Flag_RefrLeft;                         //×óÒÆ°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  46          bdata bit measure_flag;                                                 //Ä¬ÈÏ0
  47          bdata bit bSwOld;                                //ÊµÌå²É¼¯°´¼ü¾ÉµÄ×´Ì¬
  48          bdata bit bSwNew;                                //ÊµÌå²É¼¯°´¼üĞÂµÄ×´Ì¬
  49          bdata bit bSbOld;                                //±¸ÓÃ»úÏÔÊ¾°´¼ü¾ÉµÄ×´Ì¬
  50          bdata bit bSbNew;                                //±¸ÓÃ»úÏÔÊ¾°´¼üĞÂµÄ×´Ì¬
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 2   

  51          bdata bit bSsOld;                                //·äÃùÆ÷°´¼ü¾ÉµÄ×´Ì¬
  52          bdata bit bSsNew;                                //·äÃùÆ÷°´¼üĞÂµÄ×´Ì¬
  53          bdata bit Flag_Warn_Led;                         //ÆÁÄ»ÉÏ±¨¾¯µÆÉÁË¸±êÖ¾£¬Ä¬ÈÏ0
  54          bdata bit Flag_Warn_Flash;                       //LEDµÆÉÁË¸±êÖ¾
  55          bdata bit FlagMasColSlavOK;                      //Ö÷»ú²É¼¯Êı¾İÊ±µÆÉÁË¸¶¨Ê±±êÖ¾£¬Ä¬ÈÏ0
  56          bdata bit Flag8253Cnting;                        //8253¼ÆÊı¶¨Ê±¿ªÊ¼±êÖ¾£¬Ä¬ÈÏ0,ÔÚ°´ÏÂ²âÁ¿°´¼üºóÖÃ1
  57          bdata bit Flag_ParaChange;                       //²ÎÊıÉèÖÃ¸Ä±ä£¬Ä¬ÈÏ0
  58          bdata bit Flag_InputChange;                      //Ì½Í·ÉèÖÃ¸Ä±ä£¬Ä¬ÈÏ0
  59          bdata bit Flag_Collateral;                       //´Ó»ú½ÓÊÕÖ¸Áî³¬Ê±±êÖ¾
  60          bdata bit Flag_Meant;                                                   //¼ÁÁ¿Æ½¾ùÖµ±êÊ¶
  61          //bit Flag_Commond;
  62          uchar dt_in[331];                                //IIC´æ´¢Êı×é£¬ËÄÎ»Ò»×é£¬¹²83×é,Ğ¾Æ¬ÄÚ²¿Ä¬ÈÏ0Îª255
  63          uchar data Keyvar=0xFF;                    //°´¼ü±äÁ¿
  64          uchar jishucount;                                                       //µÚ¼¸´Î¼ÆÊı£¬ÓÃÀ´ÇóÆ½¾ùÖµÊ±ÖªµÀÕâÊÇµÚ¼¸´Î¼ÆÊı
  65          uint  jishu;                                                            //¼ÆÊı£¿
  66          uint count;
  67          
  68          
  69          extern void Serial_Port_Two_Initial();
  70          extern void Serial_Port_One_Initial();
  71          extern void display_b();
  72          extern void Init_MCU();
  73          extern void Init_RAM();                                                 
  74          extern void Init_Para();
  75          extern bit Speak_Alarm();
  76          extern void Select_Mast();
  77          extern void key_function();
  78          extern void RedLed_Flash();
  79          extern void Warning_Disp(uchar Num,uchar Flag,uchar State);
  80          extern void Updata_Led(uchar j);
  81          //extern void bakeup_conv_data();
  82          extern void Backup_Flash_serial1(uchar *flag,uchar *state);
  83          extern void Init_IO();
  84          extern void Transfer();
  85          extern void parameterleft();
  86          extern void BackUp_displayA();
  87          extern void display_covn_data();
  88          extern void Init_Buf();
  89          extern uint idata compare[24];
  90          //extern float idata save[16];
  91          
  92          /*********************************
  93          *            Ö÷º¯Êı
  94          **********************************/
  95          void main()
  96          { 
  97   1          //uchar i;
  98   1              Init_IO();                                    //I/O¿Ú³õÊ¼»¯,
  99   1              Init_MCU();                                   //Ö÷º¯Êı³õÊ¼»¯£¬T0¶¨Ê±Æ÷¹¤×÷ÔÚ·½Ê½1³õÊ¼»¯£¬ÏÔÊ¾"ÇëÉÔµÈ£¬³õÊ
             -¼»¯ÖĞ",GATE=0,
 100   1              Init_RAM();                                   //Î»±äÁ¿³õÊ¼»¯
 101   1              Init_Para();                                  //²ÎÊı³õÊ¼»¯,³õÊ¼»¯²ÎÊı£¬´ÓIIC¶ÁÈ¡ãĞÖµµÈĞÅÏ¢¸³Óè¸ø²ÎÁ¿
 102   1              Init_Buf();                                                                     //²¢¿ÚÍ¨Ñ¶Êı×é³õÊ¼»¯
 103   1      //      Select_Mast();                                //ÅĞ¶ÏÖ÷´Ó»ú      
 104   1              Init_Time0();                                //¿ªÆô¶¨Ê±Æ÷0¡£¶¨Ê±Æ÷0³õÊ¼»¯£¬¹¤×÷ÔÚ·½Ê½Ò»£¬¶¨Ê±³õÖµ£ºH:0xDC,L
             -:0x00;ÖĞ¶Ï¼ÆÊı³õÊ¼»¯£¿¶¨Ê±5ms,NumT0=0;
 105   1          Lcd_Clear();                                                                //LCDÇåÆÁ
 106   1              Lcd_Start();                                                            //ÏÔÊ¾"Çå»ª´óÑ§/nºËÄÜÓëĞÂÄÜÔ´¼¼ÊõÑĞ¾¿Ôº"
 107   1              EX0=1;                                        //Ö»ÔÊĞíÍâ²¿0ÖĞ¶Ï£¬ÖĞ¶Ï0Îª¼üÅÌ
 108   1              IT0=1;                                        //Íâ²¿ÖĞ¶Ï0 
 109   1              while(1)
 110   1              {       
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 3   

 111   2      //         BackUp_Display();    
 112   2                 Select_Mast();                                //ÅĞ¶ÏÖ÷´Ó»ú£¬Ğ´ÈëÖ÷´Ó»ú±êÖ¾Flag_Mast=1(Ö÷»ú)0(´Ó»ú)
 113   2                 key_function();                                                              //°´¼ü¹¦ÄÜ£¬ÔÚwhileÑ­»·ÖĞ²»¶Ï¼ì²â°´¼ü±êÖ¾£¬°´¼ü±êÖ¾ÓÉ°´¼üÍâ²¿ÖĞ¶ÏÀ´¸ü¸Ä
 114   2                 if(Flag_Tim0)                                 //8253¼ÆÊı¶¨Ê±½áÊøÊ±£¬¶ÁÈ¡Ì½Í·µÄ¼ÆÊı£¬¸Õ¿ªÊ¼Flag_Tim0=0£¬½öµ±Fl
             -ag8253Counting¼ÆÊı¶¨Ê±±êÊ¶Îª1£¬ÇÒ¼ÆÊıÆ÷ÖĞ¶Ï´ÎÊı´óÓÚÉè¶¨µÄÖĞ¶Ï´ÎÊıÊ±£¬Flag_timo²Å»áµÈÓÚ1
 115   2                  {                                                                           //Flag_Tim0Îª¼ÆÊıÆ÷½áÊø±êÖ¾,³õÊ¼Îª0,¿ª»ú´ò¿ª¶¨Ê±Æ÷ÖĞ¶Ïºó,¶¨Ê±Æ÷5msÖĞ¶ÏÒ»´Î,¼ì²éFlag_Tim0Ò»
             -´Î,ÎªÒ»±íÊ¾¼ÆÊıÆ÷¼ÆÊ±½áÊø
 116   3                              Flag_Tim0 = 0;                           //¶¨Ê±±êÖ¾Çå0
 117   3                              Flag_Warn = 0;                           //±¨¾¯±êÖ¾Çå0
 118   3                              GetAndDisdata();                         //´Ó8253µÄËø´æÆ÷µÃµ½²âÁ¿¼ÆÊıÆ÷½á¹û,´æÈëÖÁbufÊı×é
 119   3                              ShowData();                          //ÏÔÊ¾²âÁ¿Êı¾İ 
 120   3                              shortdelay(1000);                               //
 121   3                      Transfer();                          //²¢ĞĞ´«ÊäÊı¾İ
 122   3      //                      bakeup_conv_data();           
 123   3                              Init_8253();                                            //³õÊ¼»¯8253
 124   3                                                                    //¶¨Ê±½áÊøÊ±£¬Á¢¿ÌÓÖ¿ªÊ¼³õÊ¼»¯½øĞĞ¼ÆÊı
 125   3                 }
 126   2                  if(Flag_Tim0 == 0)                        //¿ªÆô8253¼ÆÊı¹ı³ÌÖĞ£¬´¦Àí±¨¾¯ÖĞ¶Ï£¬±¨¾¯ÓĞÖĞ¶ÏÂğ£¿
 127   2             {
 128   3                              if(Flag_Warn_Flash == 1)                   //Ö÷»úLEDÖ¸Ê¾µÆÉÁË¸¼ä¸ô¶¨Ê±£¬Flag_Warn_FlashÎªLEDµÆÉÁË¸±êÖ¾
 129   3                              {
 130   4                                      Flag_Warn_Flash = 0;
 131   4                          Led_Flash();
 132   4                              }
 133   3                              if((Flag_Warn_Led==1) && (PCOLSIG==0))      //ÆÁÄ»ÉÏºìµÆÉÁË¸¼ä¸ô¶¨Ê±,³ÌĞòÖĞÃ»ÓĞÕÒµ½PCOLSIG=0µÄ³ÌĞò¶Î
 134   3                              {       
 135   4                                      Flag_Warn_Led = 0;
 136   4                                      RedLed_Flash();                                                 //µÆÉÁË¸
 137   4                               } 
 138   3                  }
 139   2              }             
 140   1      }
 141          
 142          
 143          /************************************
 144          *            °´¼üÖĞ¶Ï³ÌĞò
 145          **************************************/
 146          void Int0() interrupt 0
 147           {
 148   1              uint  idata i;
 149   1              uchar idata Ptem1,Ptem2;                               
 150   1              ES=0;                                           //½ûÖ¹´®¿ÚÖĞ¶Ï
 151   1              IE2=0x00;                                       //½ûÖ¹´®¿Ú2ÖĞ¶Ï  
 152   1              EX0=0;                                          //½ûÖ¹Íâ²¿0ÖĞ¶Ï
 153   1              Keyvar=Keypress;
 154   1              Ptem1=Keyvar;                                   //¶ÁÈ¡¶Ë¿ÚµÄµØÖ·ÊÇ·ñÏÈ¸øËüÈ«²¿ÖÃ1
 155   1              Ptem1=Ptem1&0x7F;                          
 156   1              for(i=0;i<3000;i++);                            //ÑÓÊ±È¥¶¶
 157   1              Ptem2=Keyvar;
 158   1              Ptem2=Ptem2&0x7F;                  
 159   1              if(Ptem1!=Ptem2)
 160   1              {
 161   2                EX0=1;
 162   2              }
 163   1              else 
 164   1              {
 165   2                 if(Keypress==0x7E)                     //°´¼ü1£º²ÎÊıÉèÖÃ
 166   2                               Flag_KeyPara=1;
 167   2                 else if(Keypress==0x7D)                //°´¼ü2£º²âÁ¿ 
 168   2                           Flag_KeyOK=1;
 169   2                 else if(Keypress==0x7B)                //°´¼ü3£º²ÎÊıÓÒÒÆ
 170   2                           Flag_KeyRight=1;
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 4   

 171   2                 else if(Keypress==0x77)                //°´¼ü4£ºÖØĞÂÉèÖÃ
 172   2                           Flag_KeyReset=1;                    
 173   2                 else if(Keypress==0x6F)                //°´¼ü5£ºÊ±¼äÉèÖÃ
 174   2                           Flag_KeyTime=1; 
 175   2                 else if(Keypress==0x5F)                //°´¼ü6£ºÌ½Í·ÉèÖÃ
 176   2                           Flag_KeyInput=1; 
 177   2             else if(Keypress==0x3F)                //°´¼ü7£º²ÎÊı×óÒÆ
 178   2                   Flag_KeyLeft=1;
 179   2              }
 180   1              EX0=1;                         //need change
 181   1      }
 182          
 183          
 184          /****************************************
 185          *         CPU³õÊ¼»¯
 186          ****************************************/
 187          void Init_MCU()
 188          {
 189   1              /*¶¨Ê±¼ÆÊıÆ÷µÄ³õÊ¼»¯*/                         
 190   1              TMOD=0x01;                                 //T0Îª¶¨Ê±Æ÷£¬¹¤×÷ÔÚ·½Ê½1                                     
             -   
 191   1              GATE=0;                                    //8253²»¹¤×÷
 192   1              EA=0;                                      //ÏÈÆÁ±ÎËùÓĞÖĞ¶Ï 
 193   1              TR0=0;                                                                          //ÔİÊ±¹Ø±Õ¶¨Ê±Æ÷0
 194   1          IE0=0;                                     //½«Íâ²¿ÖĞ¶Ï0Çå0
 195   1              /*ÎªLCDÏÔÊ¾  ½ûÖ¹´®¿ÚÖĞ¶Ï*/
 196   1              EX0=0;                                     //½ûÖ¹Íâ²¿1ÖĞ¶Ï
 197   1              ET0=0;                                     //½ûÖ¹¶¨Ê±0ÖĞ¶Ï                        
 198   1              ES=0;                                      //½ûÖ¹´®¿Ú1ÖĞ¶Ï
 199   1              IE2=0x00;                                  //½ûÖ¹´®¿Ú2ÖĞ¶Ï 
 200   1              /*******´®¿Ú³õÊ¼»¯*********/
 201   1          Serial_Port_Two_Initial();                 //´®¿Ú2ÖĞ¶Ï³õÊ¼»¯(Î´ÕÒµ½¶¨Òå)
 202   1              /*Òº¾§³õÊ¼»¯ÏÔÊ¾*/
 203   1          Lcd_Clear();                               //´®¿Ú2ÇåÆÁ
 204   1          //picture();                               //´®¿Ú2³õÊ¼Í¼Æ¬
 205   1          Lcd_init();                                //´®¿Ú2³õÊ¼»¯LCDÏÔÊ¾£¨ÇëÉÔµÈ£¬½øĞĞ³õÊ¼»¯ÖĞ¡±
 206   1              Clear();                                   //Çå³ı¹â±ê
 207   1      }
 208          /****************************************
 209          *         ²ÎÊı³õÊ¼»¯
 210          ****************************************/
 211          void Init_Para()
 212          {
 213   1              uchar i,j,k,y,m,n,q,x;//,w ,jj 
 214   1      //      uchar s,z;
 215   1              uchar p=0;
 216   1      
 217   1              for(i=0;i<75;i++)                           //³õÊ¼»¯"²ÎÊı"Êı×é
 218   1              {
 219   2                      DataGe[i]=0;                                                    //¸öÎ»
 220   2                      DataTenth[i]=0;                                         //Ê®·ÖÎ»
 221   2                      DataCent[i]=0;                                                  //°Ù·ÖÎ»
 222   2                      DataThouth[i]=0;                                                //Ç§·ÖÎ»
 223   2              }
 224   1              for(j=0;j<8;j++)
 225   1              {
 226   2                  YuGe[i]=0;      
 227   2                      YuTenth[i]=0;      
 228   2                      YuCent[i]=0;     
 229   2                      YuThouth[i]=0;
 230   2              Flag_need_warn[i]=0;
 231   2              State_On_Off[i]=0;
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 5   

 232   2                      DoseRata[j] = 0;                                                //Ã¿×éÌ½Í·²âµÃµÄ¼ÁÁ¿ÂÊ
 233   2                      GDoseRata[j] = 0;                                               //Ã¿×éÌ½Í·²âµÃµÄ¼ÁÁ¿ÂÊ
 234   2                      DDoseRata[j] = 0;                                               //Ã¿×éÌ½Í·²âµÃµÄ¼ÁÁ¿ÂÊ
 235   2                      TrueRata[j] = 0;                                                //Ã¿×éÌ½Í·²âµÃµÄ¼ÁÁ¿ÂÊ
 236   2                  Mean_Value[j] = 0;
 237   2                      count_change_flag[j]=0;
 238   2                      save0[j]=0;
 239   2                      save1[j]=0;
 240   2                      save2[j]=0;
 241   2              }
 242   1              for(m=0;m<83;m++)                           //³õÊ¼»¯´æ´¢Êı×é
 243   1              {
 244   2                      dt_in[4*m]=0;
 245   2                      dt_in[4*m+1]=0;
 246   2                      dt_in[4*m+2]=0;
 247   2                      dt_in[4*m+3]=0;
 248   2          }   
 249   1              for(n=0;n<65;n++)                           //³õÊ¼»¯½ÓÊÕÊı×é
 250   1              {
 251   2             send_buf[n]=0;                                                   //NIM_AÏòNIM_B·¢ËÍÊı¾İµÄÊı×é
 252   2              }       
 253   1      /*      for(s=0;s<20;s++)
 254   1              {
 255   1                      backup_data[s] = 0;
 256   1              }*/
 257   1              for(y=0;y<8;y++)
 258   1              {
 259   2              Flag_need_warn[y]=0;
 260   2              State_On_Off[y]=0;      
 261   2      //              data_A[y]=0;  
 262   2              }
 263   1      /*      for(z=0;z<12;z++)
 264   1              {
 265   1                      data_B[z]=0;
 266   1              }*/
 267   1              /*´ÓAT24C16ÖĞ¶ÁÈ¡Êı¾İ*/
 268   1          DS_ReadData(dt_in);                                                 //IIC EEPROM¶ÁÈ¡Êı¾İ
 269   1              for(x=0;x<83;x++)                          //Ğ¾Æ¬ÄÚ²¿Ä¬ÈÏ0Îª255
 270   1              {
 271   2                      if(dt_in[x*4]==255)
 272   2                      {
 273   3                              dt_in[4*x]=0;
 274   3                      }
 275   2                      if(dt_in[x*4+1]==255)
 276   2                      {
 277   3                              dt_in[4*x+1]=0;
 278   3                      }
 279   2                      if(dt_in[x*4+2]==255)
 280   2                      {
 281   3                              dt_in[4*x+2]=0;
 282   3                      }
 283   2                      if(dt_in[x*4+3]==255)
 284   2                      {
 285   3                              dt_in[4*x+3]=0;
 286   3                      }
 287   2              }
 288   1          Incinput=dt_in[330];                       // ¶ÁÈ¡IICÖĞµÄÌ½Í·¸öÊı±êÖ¾
 289   1              /*********¶ÁÈ¡²ÎÊı*********/
 290   1          for(q=0;q<74;q++)
 291   1              {
 292   2                      p++;
 293   2                      if(p%11==0)
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 6   

 294   2                      {
 295   3                               p++;
 296   3                       } 
 297   2                  if((dt_in[p*4+1] <= 9)&&(dt_in[p*4+2] <= 9)&&(dt_in[p*4+3] <= 9)&&(dt_in[p*4+4] <= 9))
 298   2              {
 299   3                              DataThouth[q+1] = dt_in[p*4+1];         //Ç§·ÖÎ»
 300   3                              DataCent[q+1] = dt_in[p*4+2];           //°Ù·ÖÎ»
 301   3                              DataTenth[q+1] = dt_in[p*4+3];          //Ê®·ÖÎ»
 302   3                              DataGe[q+1] = dt_in[p*4+4];             //¸öÎ»
 303   3                              
 304   3                        }
 305   2                 }
 306   1              /********¶ÁÈ¡ãĞÖµ***********/ 
 307   1          for(k=0;k<8;k++)
 308   1              {
 309   2               if((dt_in[(k*44)+1] <= 9)&&(dt_in[(k*44)+2] <= 9)&&(dt_in[(k*44)+3] <= 9)&&(dt_in[(k*44)+4] <= 9))
 310   2             {
 311   3                      YuThouth[k] = dt_in[(k*44)+1];
 312   3                              YuCent[k] = dt_in[(k*44)+2];
 313   3                              YuTenth[k] = dt_in[(k*44)+3];
 314   3                              YuGe[k] = dt_in[(k*44)+4];
 315   3                  }
 316   2              }          
 317   1         if(dt_in[1]<=9) 
 318   1         {
 319   2                 Incdata=dt_in[1];
 320   2         }
 321   1      }
 322          
 323          /****************************************
 324          *         Êı×é³õÊ¼»¯
 325          ****************************************/
 326          void Init_Buf()
 327          {
 328   1              uchar n;
 329   1              for(n=0;n<57;n++)                             //³õÊ¼»¯½ÓÊÕÊı×é,**·ÅÔÚ´Ë´¦Ô­Òò£º·ÅÔÚ²ÎÊı³õÊ¼»»º¯ÊıÖĞ£¬ÔÚ´Ë
             -´¦µ÷ÓÃÊ±£¬Êı¾İÒÑ¾­·¢Éú±ä»¯** can not understand
 330   1              {
 331   2                 receive_buf[n] = 0;
 332   2              }
 333   1      }
 334          
 335          /************************************
 336          *          Î»±êÊ¶³õÊ¼»¯
 337          *************************************/
 338          void Init_RAM()
 339          {
 340   1          bz = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼²ÎÊı¸öÊı±êÖ¾
 341   1              xh = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼Ì½Í·¸öÊı±êÖ¾
 342   1              wb = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼²ÎÊıĞĞÊı±êÖ¾
 343   1          Note0 = 1;                                   //²¢¿Ú´Ó»ú·¢ËÍÊı¾İ±êÖ¾³õÊ¼»¯(P3^4)
 344   1              Note1 = 1;                                                                      //²¢¿Ú´Ó»ú½ÓÊÕÊı¾İ±êÖ¾³õÊ¼»¯(P4^4)
 345   1              Ack0 = 1;                                                                       //²¢¿ÚÖ÷»ú½ÓÊÕÍêÊı¾İÓ¦´ğĞÅºÅ±êÖ¾(P3^5)
 346   1              Ack1 = 1;                                                                       //²¢¿ÚÖ÷»ú·¢ËÍÍêÊı¾İÓ¦´ğĞÅºÅ±êÖ¾(P4^6)
 347   1              Speak = 1;                                    //¸ßµçÆ½´ú±í·äÃùÆ÷²»Ïì(P1^0)      
 348   1              Incdata = 0;                                  //²ÎÊı´óĞ¡³õÊ¼»¯
 349   1              Inctime = 0;                                  //Ê±¼ä°´¼üÔö¼Ó±êÖ¾³õÊ¼»¯
 350   1              Incinput = 8;                                 //Ä¬ÈÏÏÔÊ¾Ì½Í·¸öÊıÎª8¸ö
 351   1              Redrawtime =60;                              //Ä¬ÈÏË¢ĞÂÊ±¼äÎª60Ãë
 352   1              Incdataright = 1;                                                       //ÓÒÒÆ°´¼ü³õÊ¼»¯
 353   1              jishu=0;
 354   1              jishucount=0;
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 7   

 355   1              count=0;                             
 356   1          Var_Led = 0xff;                               //led±¨¾¯Ö¸Ê¾µÆ
 357   1              Led573 = Var_Led;                                                               //ÓÃXBYTE´«ÊäÊı¾İ¸øLED
 358   1          Var_Signal1 = 0xff;                           //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½Ó¼ÆÊı¹Ü
 359   1          Var_Signal2 = 0x00;                                                         //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½ÓµçÀëÊÒ
 360   1          Var_Signal3 = 0x00;                                                         //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½ÓµçÀëÊÒ
 361   1              Signal1 = Var_Signal1;                                                  //ÏÂÃæÈıÌõ´«ÊäĞÅºÅ£¬Ä¬ÈÏÈ«½Ó¼ÆÊı¹Ü
 362   1          Signal2 = Var_Signal2;
 363   1          Signal3 = Var_Signal3;
 364   1          sendadd = 0x00;                                //¸ø²¢ĞĞ´Ó»ú·¢ËÍ³õÊ¼Ö¸Áî
 365   1          PCOLSIG = 1;                                   //¸ßµçÆ½´ú±í²»²É¼¯Êı¾İ£¬P3^3,
 366   1          bSwNew = PCOLSIG;                              //²É¼¯Êı¾İ£¨bswNewÎªÎ»²¼¶û±äÁ¿£©
 367   1          bSwOld = bSwNew;                                                            //ÀÏ°´¼ü
 368   1          PALE = 1;                                      //¸ßµçÆ½´ú±í²»ÏÔÊ¾±¸ÓÃ»ú,P4^5,±¸ÓÃÏÔÊ¾ÆÁ°´¼ü
 369   1          bSbOld = 1;                                                                         //±¸ÓÃ»úÏÔÊ¾°´¼ü²¼¶û±êÖ¾
 370   1              Judge_Speak = 1;                               //¸ßµçÆ½´ú±í·äÃùÆ÷²»¹¤×÷£¬P1^7·äÃùÆ÷¿ª¹Ø°´¼ü
 371   1              bSsNew = Judge_Speak;                          //·äÃùÆ÷¹¤×÷
 372   1          bSsOld = bSsNew;    
 373   1          Zhu_Cong = 1;                                  //Ö÷´Ó»ú±êÖ¾ĞÅºÅ£¬¸ßµçÆ½´ú±íÊÇÖ÷»ú                   
 374   1              Flag_KeyInput = 0;                             //Ì½Í·¸öÊı±êÖ¾
 375   1              Flag_KeyTime = 0;                              //²âÁ¿Ê±¼ä±êÖ¾
 376   1              Flag_KeyPara = 0;                              //ÊäÈë²ÎÊı±êÖ¾
 377   1              Flag_KeyRight = 0;                             //ÓÒÒÆ±êÖ¾
 378   1              Flag_KeyOK = 0;                                //¿ªÊ¼²âÁ¿±êÖ¾
 379   1              Flag_KeyReset = 0;                             //ÖØĞÂÏÔÊ¾±êÖ¾;
 380   1              Flag_KeyLeft = 0;
 381   1              Flag_Tim0 = 0;
 382   1              Flag_Warn_Led = 0;
 383   1              FlagMasColSlavOK = 0; 
 384   1              Flag8253Cnting = 0;
 385   1              Flag_Warn_Count = 0;
 386   1              measure_flag=1;
 387   1              FlagCollErr = 0;
 388   1          CntColTimer = 0;
 389   1          FlagColling = 0;
 390   1              Flag_ParaChange = 0;
 391   1              Flag_InputChange = 0;
 392   1      //      Flag_serial1_led = 0;
 393   1              CmOverTime = 0;
 394   1          Flag_Collateral = 0;  
 395   1          FlagCollFall = 0;                   
 396   1              Flag_Meant = 0; 
 397   1      //      Flag_data_change = 0;
 398   1      //      Flag_Commond = 1;
 399   1      }
 400          
 401          /************************************
 402          *         I/O¶Ë¿Ú³õÊ¼»¯
 403          *************************************/
 404          void Init_IO()                       //ÉèÖÃI/O¶Ë¿ÚÀàĞÍ
 405          {
 406   1          P4SW = 0x70;                    //P4.4 P4.5 P4.6×÷ÎªÆÕÍ¨I/O¿Ú
 407   1      
 408   1              P3M1 |= 0x30;                   //ÉèÖÃP3.5£¬P3.4¿ÚÊäÈë
 409   1              P3M0 &= 0xCF;
 410   1      
 411   1              P3M1 &= 0xFC;
 412   1              P3M0 |= 0x03;                   //ÉèÖÃP3.1, p3.0¿ÚÎªÇ¿ÍÆÍìÊä³ö  
 413   1      
 414   1              P4M1 &= 0xAF;                   //ÉèÖÃP4¿ÚÎªÇ¿ÍÆÍìÊä³ö
 415   1              P4M0 |= 0x50;
 416   1              
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 8   

 417   1      }
 418          
 419          /************************************
 420          *          ²É¼¯Êı¾İ°´¼ü´¦Àí
 421          *************************************/
 422          /*bit Select_collect(void)
 423          {
 424                  bit bRet;
 425                  bRet = 0;
 426                  bSwNew=PCOLSIG;
 427              if(bSwNew != bSwOld)
 428              {
 429                  if(bSwOld==0)
 430                   {
 431                          bRet = 0;          //²»²É¼¯´Ó»úÊı¾İ
 432                       }
 433                  else
 434                   {                    
 435                                  bRet = 1;          //²É¼¯´Ó»úÊı¾İ
 436                   }
 437                          bSwOld=bSwNew;
 438              }
 439                  return bRet;    
 440          }*/
 441          
 442          /************************************
 443          *          Ö÷´Ó»ú°´¼ü´¦Àí
 444          *************************************/
 445          void Select_Mast()
 446          {
 447   1              if(Zhu_Cong==1)                         //P1^6Ö÷´Ó»ú¿ª¹Ø°´¼ü£¬¸ßµçÆ½ÎªÖ÷»ú
 448   1           {
 449   2              Flag_Mast = 1;          //Ö÷»ú
 450   2           }
 451   1          else if(Zhu_Cong==0)
 452   1           {
 453   2              Flag_Mast = 0;         //´Ó»ú
 454   2           }          
 455   1      }
 456          
 457          /************************************
 458          *       ±¸ÓÃ»úÏÔÊ¾°´¼ü´¦Àí£¨****************4.21ºÅÉÏÎç¾õµÃÓĞÎÊÌâ£º±¸ÓÃÏÔÊ¾°´¼üÊÇÆÕÍ¨°´¼ü£¬²»ÊÇ¿ª¹Ø°´¼üĞÎÊ½
             -£©
 459          *************************************/
 460          /*void BackUp_Display(void)
 461          {       
 462                  bSbNew = PALE;
 463              if(bSbNew != bSbOld)
 464              {
 465                          if(bSbNew == 0)
 466                   {  
 467                                  Flag_Commond = ~Flag_Commond;
 468                   }
 469                          bSbOld = bSbNew;
 470              }
 471          }*/
 472          
 473          
 474          /***********************************
 475          *         ·äÃùÆ÷°´¼ü´¦Àí
 476          ***********************************/
 477          bit Speak_Alarm()
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 9   

 478          {
 479   1              bit bspeak;                                     //¶¨ÒåÒ»Î»BoolĞÍ±äÁ¿
 480   1              bspeak = 0;
 481   1              bSsNew=Judge_Speak;                     //·äÃùÆ÷¿ª¹Ø°´¼ü(±£´æÎªĞÂ×´Ì¬)
 482   1          if(bSsNew != bSsOld)                //Èô·äÃù¿ª¹Ø×´Ì¬ÓĞ±ä¶¯
 483   1          {
 484   2              if(bSsOld==0)                   //·äÃùÀÏ×´Ì¬Îª0
 485   2               {
 486   3                      bspeak = 0;        //·äÃùÆ÷²»¹¤×÷
 487   3                   }
 488   2              else
 489   2               {       
 490   3                              bspeak = 1;      //·äÃùÆ÷¹¤×÷
 491   3               }
 492   2                      bSsOld=bSsNew;
 493   2          }
 494   1              return bspeak;  
 495   1      }
 496          /**********************************
 497          *          °´¼ü¹¦ÄÜ
 498          **********************************/
 499          void key_function()
 500          {
 501   1                if(Flag_KeyInput)                  //Ì½Í·°´¼ü°´ÏÂ(°´ÏÂºó½øĞĞÌ½Í·µÄ±ê¶¨¶¯×÷,Í¬Ê±ÏÔÊ¾GM¼ÆÊı¹ÜºÍµçÀëÊÒµÄ¼Æ
             -ÊıÖµºÍ¼ÆËã³öÀ´µÄ¼ÁÁ¿Öµ)
 502   1                 {
 503   2                     Flag_InputChange = 1;         //Ì½Í·ÉèÖÃ±ä¶¯±êÖ¾ÖÃ1,±íÊ¾Ì½Í·±ä¶¯¹ı,ÔÚ¸ÄÍêÌ½Í·½øÈë²âÁ¿ºó,Èô´ËÏîÎªÒ»
             -,Ôò»áÏÈ´æ´¢¸Ä¹ıµÄÉèÖÃ
 504   2                         Flag_KeyInput = 0;                   //°´¼ü±êÖ¾Î»ÇåÁã
 505   2                         setinput();
 506   2                         EX0=1;                                               //¿ªÆôÍâ²¿ÖĞ¶Ï0
 507   2                 }
 508   1                 if(Flag_KeyTime)                   //Ê±¼ä°´¼ü°´ÏÂ
 509   1                 {
 510   2                         Flag_KeyTime = 0;
 511   2                         settime();
 512   2                         EX0=1;
 513   2                 }
 514   1                 if(Flag_KeyPara)                   //²ÎÊı°´¼ü°´ÏÂ
 515   1                 {
 516   2                     Flag_ParaChange = 1;           //²ÎÊıÉèÖÃ±ä¶¯±êÖ¾ÖÃ1,±íÊ¾²ÎÊı±ä¶¯¹ı,ÔÚ¸ÄÍê²ÎÊı½øÈë²âÁ¿ºó,Èô´ËÏîÎªÒ
             -»,Ôò»áÏÈ´æ´¢¸Ä¹ıµÄ²ÎÊı
 517   2                         Flag_KeyPara = 0;
 518   2                         setparameter();
 519   2                         EX0=1;
 520   2                 }
 521   1                 if(Flag_KeyRight)                  //ÓÒÒÆ°´¼ü°´ÏÂ
 522   1                 {
 523   2                         Flag_KeyRight = 0;
 524   2                         parameterright();
 525   2                         EX0=1;
 526   2                 }
 527   1                 if(Flag_KeyLeft)
 528   1                 {
 529   2                         Flag_KeyLeft = 0;
 530   2                         parameterleft();
 531   2                         EX0=1;
 532   2                 }
 533   1                 if(Flag_KeyOK)                     //²âÁ¿°´¼ü°´ÏÂ
 534   1                 {
 535   2                         Flag_KeyOK = 0;
 536   2                         measure();
C51 COMPILER V7.08   MAIN                                                                  04/11/2016 13:25:13 PAGE 10  

 537   2                 EX0=0;
 538   2                 }
 539   1                 if(Flag_KeyReset)                  //ÖØÉè°´¼ü°´ÏÂ
 540   1                 {
 541   2                         Flag_KeyReset = 0;
 542   2                         ReSet();
 543   2                         EX0=1;
 544   2                 }
 545   1      }
 546          
 547          
 548          /****************************************
 549          *          Ö÷´Ó»ú²¢ĞĞ´«Êä
 550          ****************************************/
 551          void Transfer()
 552          {
 553   1           if(Flag_Mast==0)                                  //´Ó»ú
 554   1             {
 555   2                      Flag_Collateral = 1;
 556   2                              CmOverTime = 0;
 557   2                  send_buf[64]=Incinput;
 558   2                              Send_Word(send_buf,NUMSENDBYTES);         //·¢ËÍÊı¾İ
 559   2             }
 560   1             if(Flag_Mast==1)                               //Ö÷»ú
 561   1             {                
 562   2                  Collect_Word(receive_buf,57);    
 563   2                
 564   2             }
 565   1                         
 566   1      }
 567          
 568          
 569          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1708    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    336       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----       4
   BIT SIZE         =     29       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
